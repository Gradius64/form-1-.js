

// Example: If your form has an id attribute, you can select it like this
document.getElementById()

const formElement = document.getElementById('yourFormId');


// const formElement = document.querySelector('#yourFormId');




    //// Declare formElement variable before accessing it
    


// Accessing the formElement variable
console.log(formElement);

formElement.submit();

console.log(formElement),

formElement.submit();


// Make sure to assign a value to formElement before accessing it

if(myVar !== null) {
    console.log("variable is not null");
} else {
    console.log("variable is null");
}

    
   
    // Declare and define the storeLocalStorage function
const storeLocalStorage = (key, value) => {
    localStorage.setItem(key, JSON.stringify(value));
};

// Example usage of storeLocalStorage
const data = { name: 'John', age: 30 };
storeLocalStorage('userData', data);


    
    // Access formElement after initialization
    console.log(formElement);

    formElement.submit();

    

    

// Check if formElement is not null before accessing it
if (formElement) {
    // Access formElement here
    console.log('Form Element:', formElement);
} else {
    console.error('Form Element is not found.');
}



// Check if formElement is not null before accessing it
if (formElement) {
    // Access formElement here
    console.log('Form Element:', formElement);
} else {
    console.error('Form Element is not found.');
}
    
    

// Assign a value to formElement
formElement = document.getElementById('myForm');

// Access formElement after declaration
if (formElement) {
    // Perform actions using formElement
    formElement.addEventListener('submit', function(event) {
        // Prevent the default form submission behavior
        event.preventDefault();
        // Your custom logic here
    });
} else {
    console.log('Form element not found');
}
    
    
    document.addEventListener('DOMContentLoaded', function() {
    formElement = document.getElementById("myForm");
    
    // Check if the form element is successfully selected
    var formElement = document.querySelector('form');

    if (formElement) {
        // Your code here that uses formElement
    } else {
        console.error('formElement is not defined or assigned a value.');
    }
    
    // TODO: Create a function that handles the form submission. Grab the form data and store it in local storage, then redirect to the blog page using the `redirectPage` function. If the form is submitted with missing data, display an error message to the user.
    // Function to handle form submission
    function handleFormSubmission(event) {
        event.preventDefault(); // Prevent the default form submission behavior
      
        const username = document.getElementById('username').value;
        const title = document.getElementById('title').value;
        const content = document.getElementById('content').value;
      
        // Check if any field is empty
        if (!username || !title || !content) {
          const errorElement = document.getElementById('error');
          errorElement.textContent = 'Please complete the form.';
        } else {
          // Store form data in local storage
          const blogPost = { username, title, content };
          localStorage.setItem('blogPost', JSON.stringify(blogPost));
      
          // Redirect to the blog page
          redirectPage('blog.html'); // Assuming the blog page is named 'blog.html'
        }
      }
    // TODO: Add an event listener to the form on submit. Call the function to handle the form submission.
    function handleFormSubmission(event) {
      event.preventDefault(); // Prevent the default form submission behavior
    
      // Add your form submission logic here
      // For example, you can access form data using event.target
      const formData = new FormData(event.target);


      // Process the form data as needed
      <script>
         document.getElementById('myForm').addEventListener('submit', function(event) {
    }
            event.preventDefault(); // Prevent the default form submission
         

            // Access form data
            const formData = new FormData(event.target);
            const formValues = Object.fromEntries(formData.entries());
            
            // Process form data (you can send it to the backend here)
            console.log(formValues);



      </script>
      
    
      // Reset the form after submission
      event.target.reset();
    }
    
    // Add event listener to the form on submit
   formElement.addEventListener('submit', function(event) {
    event.preventDefault();

    // get the form data
    const formData = new FormData(formElement);

    // Convert the form data to a JSON object
  
  });

  // Convert the object to a JSON string
  const formDataJSON = JSON.stringify(formDataObject);

  // Store the JSON string in local storage
  localStorage.setItem('formData', formDataJSON);

  // Optionally, you can submit the form data to a server here

    // Reset the form
  formElement.reset();
});
    
    
      // Add your form submission logic here
    
      document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const errorElement = document.getElementById('error');
    
        form.addEventListener('submit', function(event) {
            event.preventDefault();
    
            const username = document.getElementById('username').value;
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;
    
            if (username === '' || title === '' || content === '') {
                errorElement.textContent = 'Please complete the form.';
            } else {
                const blogPost = {
                    username: username,
                    title: title,
                    content: content
                };
    
                // Store the form data in local storage
                localStorage.setItem('blogPost', JSON.stringify(blogPost));
    
                // Redirect to the blog page
                window.location.href = 'blog.html';
            }
        });
    });
    
    
      // This function should handle form data, validation, storage, and redirection
      function handleFormSubmission(formData) {
        // Client-side validation
        if (!validateFormData(formData)) {
            // Display validation error messages to the user
            return;
        }
    
        // Send form data to the server
        fetch('/submitForm', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => {
            if (response.ok) {
                // Redirect to a new page upon successful submission
                window.location.href = '/successPage';
            } else {
                // Handle server-side errors and display appropriate messages
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
    
    // Function to validate form data on the client side
    function validateFormData(formData) {
      // Implement your validation logic here
      // Return true if data is valid, false otherwise
    }
    
    // Server-side route to handle form submission
    app.post('/submitForm', (req, res) => {
      const formData = req.body;
    
      // Server-side validation
      if (!validateFormData(formData)) {
          return res.status(400).json({ error: 'Invalid form data' });
      }
    
      // Store the valid form data in the database or local storage
      // Redirect to a success page
      res.redirect('/successPage');
    
    
    
    });
